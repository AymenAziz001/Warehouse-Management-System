@model DashboardViewModel
@{
    ViewData["Title"] = "Dashboard";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2 class="mb-0">
        <i class="bi bi-speedometer2 me-2 text-primary"></i>
        Warehouse Dashboard
    </h2>
    <div>
        <button type="button" class="btn btn-outline-primary" id="refreshBtn">
            <i class="bi bi-arrow-clockwise me-1"></i>
            Refresh
        </button>
        <small class="text-muted ms-3">
            Last updated: @Model.LastRefresh.ToString("MM/dd/yyyy HH:mm:ss")
        </small>
    </div>
</div>

<!-- KPI Cards Row -->
<div class="row g-4 mb-4">
    <div class="col-lg-3 col-md-6">
        <div class="card border-0 shadow-sm">
            <div class="card-body text-center">
                <div class="d-flex align-items-center justify-content-center mb-3">
                    <div class="bg-primary bg-opacity-10 rounded-circle p-3">
                        <i class="bi bi-box text-primary fs-3"></i>
                    </div>
                </div>
                <h3 class="mb-1">@Model.TotalItems.ToString("N0")</h3>
                <h6 class="text-muted mb-0">Total Items</h6>
                <small class="text-success">@Model.ActiveItems.ToString("N0") Active</small>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6">
        <div class="card border-0 shadow-sm">
            <div class="card-body text-center">
                <div class="d-flex align-items-center justify-content-center mb-3">
                    <div class="bg-success bg-opacity-10 rounded-circle p-3">
                        <i class="bi bi-list-check text-success fs-3"></i>
                    </div>
                </div>
                <h3 class="mb-1">@Model.TotalSKUs.ToString("N0")</h3>
                <h6 class="text-muted mb-0">Total SKUs</h6>
                <small class="text-info">In Stock</small>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6">
        <div class="card border-0 shadow-sm">
            <div class="card-body text-center">
                <div class="d-flex align-items-center justify-content-center mb-3">
                    <div class="bg-warning bg-opacity-10 rounded-circle p-3">
                        <i class="bi bi-stack text-warning fs-3"></i>
                    </div>
                </div>
                <h3 class="mb-1">@Model.TotalStockValue.ToString("N0")</h3>
                <h6 class="text-muted mb-0">Total Units</h6>
                <small class="text-warning">In Stock</small>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6">
        <div class="card border-0 shadow-sm">
            <div class="card-body text-center">
                <div class="d-flex align-items-center justify-content-center mb-3">
                    <div class="bg-info bg-opacity-10 rounded-circle p-3">
                        <i class="bi bi-geo-alt text-info fs-3"></i>
                    </div>
                </div>
                <h3 class="mb-1">@Model.StockLocations.ToString("N0")</h3>
                <h6 class="text-muted mb-0">Stock Locations</h6>
                <small class="text-info">Active</small>
            </div>
        </div>
    </div>
</div>

<!-- Content Row -->
<div class="row g-4">
    <!-- Recent Movements -->
    <div class="col-lg-8">
        <div class="card border-0 shadow-sm h-100">
            <div class="card-header bg-white border-bottom">
                <h5 class="card-title mb-0">
                    <i class="bi bi-clock-history me-2 text-primary"></i>
                    Recent Movements (Last 7 Days)
                </h5>
            </div>
            <div class="card-body p-0">
                @if (Model.RecentMovements.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead class="table-light">
                            <tr>
                                <th>Type</th>
                                <th>SKU</th>
                                <th class="text-end">Quantity</th>
                                <th>Time</th>
                                <th>User</th>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var movement in Model.RecentMovements)
                            {
                                <tr>
                                    <td>
                                        <span class="badge bg-@(GetMovementTypeColor(movement.Type))">
                                            @movement.Type
                                        </span>
                                    </td>
                                    <td class="fw-medium">@movement.ItemSku</td>
                                    <td class="text-end">@movement.Quantity.ToString("N1")</td>
                                    <td class="text-muted">@movement.Timestamp.ToString("MM/dd HH:mm")</td>
                                    <td class="text-muted">@movement.UserId</td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="text-center py-5 text-muted">
                        <i class="bi bi-inbox fs-1 mb-3"></i>
                        <p class="mb-0">No recent movements</p>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Low Stock Alerts -->
    <div class="col-lg-4">
        <div class="card border-0 shadow-sm h-100">
            <div class="card-header bg-white border-bottom">
                <h5 class="card-title mb-0">
                    <i class="bi bi-exclamation-triangle text-warning me-2"></i>
                    Low Stock Alerts
                </h5>
            </div>
            <div class="card-body p-0">
                @if (Model.LowStockItems.Any())
                {
                    <div class="list-group list-group-flush">
                        @foreach (var item in Model.LowStockItems)
                        {
                            <div class="list-group-item border-0 py-3">
                                <div class="d-flex justify-content-between align-items-start">
                                    <div class="flex-grow-1">
                                        <h6 class="mb-1 fw-medium">@item.ItemSku</h6>
                                        <p class="mb-1 text-muted small">@item.ItemName</p>
                                        <small class="text-muted">@item.LocationCode</small>
                                    </div>
                                    <div class="text-end">
                                        <span class="badge bg-@(GetStockLevelColor(item.AvailableQuantity)) rounded-pill">
                                            @item.AvailableQuantity.ToString("N1")
                                        </span>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="card-footer bg-light text-center">
                        <a asp-controller="Inventory" asp-action="Index" class="btn btn-sm btn-outline-warning">
                            <i class="bi bi-eye me-1"></i>
                            View All Inventory
                        </a>
                    </div>
                }
                else
                {
                    <div class="text-center py-5 text-success">
                        <i class="bi bi-check-circle fs-1 mb-3"></i>
                        <p class="mb-0">All items well stocked!</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#refreshBtn').click(function() {
                window.location.reload();
            });

            // Auto-refresh every 5 minutes
            setInterval(function() {
                window.location.reload();
            }, 300000);
        });
    </script>
}

@functions {

    private string GetMovementTypeColor(string movementType)
    {
        return movementType.ToLower() switch
        {
            "receive" or "receiving" => "success",
            "pick" or "picking" => "primary",
            "putaway" => "info",
            "adjustment" => "warning",
            _ => "secondary"
        };
    }

    private string GetStockLevelColor(decimal quantity)
    {
        return quantity switch
        {
            <= 0 => "danger",
            <= 5 => "danger",
            <= 10 => "warning",
            _ => "success"
        };
    }

}